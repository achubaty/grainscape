# Generated by roxygen2: do not edit by hand

S3method(GOC,mpg)
S3method(MPG,RasterLayer)
S3method(corridor,goc)
S3method(distance,goc)
S3method(graphdf,goc)
S3method(graphdf,igraph)
S3method(graphdf,list)
S3method(graphdf,mpg)
S3method(point,goc)
S3method(threshold,mpg)
export(GOC)
export(MPG)
export(corridor)
export(distance)
export(graphdf)
export(gsGOC)
export(gsGOCCorridor)
export(gsGOCDistance)
export(gsGOCPoint)
export(gsGOCVisualize)
export(gsGraphDataFrame)
export(gsMPG)
export(point)
export(threshold)
export(visualize)
importFrom(Rcpp,evalCpp)
importFrom(graphics,plot)
importFrom(igraph,'%>%')
importFrom(igraph,'E<-')
importFrom(igraph,'V<-')
importFrom(igraph,E)
importFrom(igraph,V)
importFrom(igraph,as_edgelist)
importFrom(igraph,clusters)
importFrom(igraph,components)
importFrom(igraph,delete.edges)
importFrom(igraph,delete_edges)
importFrom(igraph,distances)
importFrom(igraph,edge_attr)
importFrom(igraph,ends)
importFrom(igraph,graph_from_data_frame)
importFrom(igraph,is_igraph)
importFrom(igraph,shortest_paths)
importFrom(igraph,vcount)
importFrom(igraph,vertex_attr)
importFrom(methods,as)
importFrom(methods,loadMethod)
importFrom(raster,boundaries)
importFrom(raster,cellFromRowCol)
importFrom(raster,cellFromRowColCombine)
importFrom(raster,cellFromXY)
importFrom(raster,compareRaster)
importFrom(raster,extent)
importFrom(raster,freq)
importFrom(raster,getValues)
importFrom(raster,mask)
importFrom(raster,ncol)
importFrom(raster,nrow)
importFrom(raster,plot)
importFrom(raster,projection)
importFrom(raster,raster)
importFrom(raster,rasterToPolygons)
importFrom(raster,reclassify)
importFrom(raster,res)
importFrom(raster,unique)
importFrom(raster,writeRaster)
importFrom(raster,xyFromCell)
importFrom(raster,zonal)
importFrom(sp,Line)
importFrom(sp,Lines)
importFrom(sp,SpatialLines)
importFrom(sp,SpatialLinesDataFrame)
importFrom(sp,SpatialPoints)
importFrom(sp,SpatialPolygonsDataFrame)
importFrom(sp,coordinates)
importFrom(sp,geometry)
importFrom(sp,plot)
importFrom(sp,spChFIDs)
importFrom(stats,median)
importFrom(utils,read.table)
importFrom(utils,type.convert)
useDynLib(grainscape)
